% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/targbetween.R
\name{assorted_dyads}
\alias{assorted_dyads}
\title{Retrieve Shortest Paths for Assorted Dyads}
\usage{
assorted_dyads(network, dyads, directed = FALSE)
}
\arguments{
\item{network}{An \code{igraph} network graph}

\item{dyads}{A two-column data.frame, with two vertices in each row,
indicating the dyads to be considered in the analysis}

\item{directed}{A boolean value indicating whether the \code{network} should
be treated as directed (default = \code{FALSE})}
}
\value{
A list of shortest paths between the pairs of vertices indicated in
  each row of \code{dyads}.
}
\description{
This helper function retrieves the set of shortest paths connecting each dyad
of vertices specified in a two-column data.frame (column 1 = source,
column 2 = destination), for subsequent use by
\code{\link{compute_targbetween}}.
}
\details{
This function should not be called directly. Instead, provide the
\code{network} and the set of \code{dyads} that you want to analyze to
\code{\link{targbetween}}. That function calls \code{\link{assorted_dyads}}
as needed.

WARNING: This function may be extremely slow when the number of rows in
\code{dyads} is large, as \code{\link[igraph]{all_shortest_paths}} must be
separately run for each individual dyad. If all source vertices correspond to
the same set of \code{destination} vertices,
\code{\link{targbetween_alldyads}} should be used, as this calls
\code{\link{one_to_many}}, instead of using \code{\link{targbetween}} to call
\code{\link{assorted_dyads}}. The \code{\link{targbetween_alldyads}} function
takes a vector of \code{source} vertices and a vector of \code{destination}
vertices as arguments, and it is either \code{length(source)} or
\code{length(destination)} times faster than \code{\link{targbetween}},
whichever is larger.
}
